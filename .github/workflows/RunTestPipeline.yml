name: Playwright Tests CI 

on: 
  push: 
    branches: 
     - main

permissions:
  checks: write      # Needed for junit-report action
  contents: write    # Required for basic repo access
  pages: write       # Required for deploying to GitHub Pages
  id-token: write    # Required for GitHub Pages deployment
  
jobs:
    playwright-tests:
        runs-on: windows-latest
        name: Playwright Job
        
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                node-version: '18'
                cache: 'npm'  
             
            - name: Install Node
              run: npm install    

            - name: Install Playwright with dependencies
              run: npx playwright install

            - name: Run Playwright Tests
              env:
                COUNTRY: India
                CI: true
              run: npx playwright test tests/
              
            - name: Upload Playwright Report Artifact
              uses: actions/upload-artifact@v4
              with:
                name: TestResults
                path: ./playwright-report

            - name: Publish JUnit Test Results
              uses: mikepenz/action-junit-report@v3
              with:
                report_paths: '**/playwright-report/test-results.xml'
              continue-on-error: true 

            - name: Generate summary JSON
              run: |
                  node <<EOF
                  const fs = require('fs');
                  const report = JSON.parse(fs.readFileSync('./playwright-report/test-results-json.json'));
                  let passed = 0, failed = 0, skipped = 0;
                  for (const suite of report.suites || []) {
                    for (const test of suite.specs || []) {
                      for (const r of test.tests || []) {
                        if (r.results[0].status === 'passed') passed++;
                          else if (r.results[0].status === 'failed') failed++;
                          else skipped++;
                        }
                      }
                    }
                    const summary = {
                    passed, failed, skipped,
                    timestamp: new Date().toISOString()
                    };
                    fs.mkdirSync('dashboard/data', { recursive: true });
                    fs.writeFileSync('dashboard/data/results.json', JSON.stringify(summary, null, 2));
                    EOF  
        
    deploy-report:
      needs: playwright-tests
      name: Deploy Playwright Report
      uses: ./.github/workflows/deploy-report-to-page.yml
      with:
        artifact-name: TestResults
        publish-dir: ./playwright-report